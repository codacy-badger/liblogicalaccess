name: Test Github Actions
on:
  push:
    branches:
      - develop
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler:
          - { name: gcc, version: 9 }
          - { name: clang, version: 11 }
    steps:
      - name: "Setup"
        run: |
          sudo apt-get update
          sudo apt-get install -y libpcsclite-dev
          pip3 install conan
      - uses: actions/checkout@v2
      - name: "Build with clang"
        if: matrix.compiler.name == 'clang'
        env:
          CC: /usr/bin/clang
          CXX: /usr/bin/clang++
        run: |
          mkdir build
          cd build
          conan install .. -s compiler=${{ matrix.compiler.name }} -s compiler.version=${{ matrix.compiler.version }} -o LLA_BUILD_UNITTEST=True --build=missing
          conan build ..
      - name: "Build with gcc"
        if: matrix.compiler.name == 'gcc'
        run: |
          mkdir build
          cd build
          conan install .. -s compiler=${{ matrix.compiler.name }} -s compiler.version=${{ matrix.compiler.version }} -o LLA_BUILD_UNITTEST=True --build=missing
          conan build ..
      - name: "Test"
        run: |
          cd build
          ctest

  build-windows:
    runs-on: windows-latest
    steps:
      - name: "Setup"
        run: |
          pip3 install conan
      - uses: actions/checkout@v2
      - name: "Build"
        run: |
          mkdir build
          cd build
          conan install .. -s compiler.version=15 -o LLA_BUILD_UNITTEST=True --build=missing
          conan build ..
      - name: "Test"
        run: |
          cd build
          ctest

  codacy-analysis-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          #tool: <CLIENT_SIDE_TOOL_NAME>
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
          max-allowed-issues: 2147483647
